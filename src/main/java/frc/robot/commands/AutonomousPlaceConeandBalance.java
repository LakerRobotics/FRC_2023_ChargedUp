// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.commands;
import frc.robot.commands.*;
import edu.wpi.first.wpilibj2.command.CommandGroupBase;
import edu.wpi.first.wpilibj2.command.ParallelRaceGroup;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import edu.wpi.first.wpilibj2.command.CommandGroupBase;
import edu.wpi.first.wpilibj2.command.ParallelCommandGroup;
import edu.wpi.first.wpilibj2.command.ParallelRaceGroup;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import frc.robot.Constants.ArmConstants;
import frc.robot.subsystems.Arm;
import frc.robot.subsystems.DriveTrain;

import frc.robot.subsystems.Intake;
//import frc.robot.commands.ArmControlExtend;
//import frc.robot.commands.IntakeConeIn;
//import frc.robot.commands.DriveTrainBackwards;
//import frc.robot.commands.DriveTrainBalance;

/**
 *
 */
public class AutonomousPlaceConeandBalance extends SequentialCommandGroup {

    public AutonomousPlaceConeandBalance(Intake theIntake, Arm theArm, DriveTrain theDriveTrain){

// Pick up cone

//addCommands(new IntakeConeIn(theIntake).withTimeout(1));

        // Pick up cone
        addCommands(new IntakeConeIn(theIntake).withTimeout(0.25));

        // Extend arm and secure cone
        ParallelCommandGroup extendArmWhileSecuringCone = new ParallelCommandGroup(
            new ArmControlExtend(theArm).withTimeout(2),
            new SequentialCommandGroup(
                new IntakeConeIn(theIntake).withTimeout(0.75),
                new IntakeConeHoldStart(theIntake).withTimeout(0.1)
            )
        );
        addCommands(extendArmWhileSecuringCone);

        // Drop cone
        addCommands(new IntakeConeOut(theIntake).withTimeout(2));

        // Retract arm
        ParallelCommandGroup retractArmWhileDrivingBackwards = new ParallelCommandGroup(
            new ArmControlRetract(theArm).withTimeout(3),
            new DriveTrainMoveStraight(theDriveTrain,
            //-0.47= one rotation of the wheel 
            // distance traveled for one full rotation of the wheel 18.84 inche
            -180/*THIS IS DISTANCE TRAVELED IN INCHES*/*(0.47/18.84)
            /*Distance to the center of the chargin station 99.8 Inches*/,
           4 /*maxSpeed ft/sec*/,
           20*(0.47/18.84) /*inch to get to maxSpeed*/,
           theDriveTrain.getHeading() /*Angle to drive straight on*/
         )
);
                
        addCommands(retractArmWhileDrivingBackwards);

     

addCommands(new DriveTrainMoveStraight(theDriveTrain,
                                         //-0.47= one rotation of the wheel 
                                         // distance traveled for one full rotation of the wheel 18.84 inche
                                         75/*THIS IS DISTANCE TRAVELED IN INCHES*/*(0.47/18.84)
                                         /*Distance to the center of the chargin station 99.8 Inches*/,
                                        4 /*maxSpeed ft/sec*/,
                                        20*(0.47/18.84) /*inch to get to maxSpeed*/,
                                        theDriveTrain.getHeading() /*Angle to drive straight on*/
                                      )
);

// Drive Fowards

//addCommands(new DriveTrainFowards(theDriveTrain).withTimeout(1.5));

// Balance

addCommands(new DriveTrainBalance(theDriveTrain));

addCommands(new DriveTrainMoveStraight(theDriveTrain,
                                         //-0.47= one rotation of the wheel 
                                         // distance traveled for one full rotation of the wheel 18.84 inche
                                         -3/*THIS IS DISTANCE TRAVELED IN INCHES*/*(0.47/18.84)
                                         /*Distance to the center of the chargin station 99.8 Inches*/,
                                        4 /*maxSpeed ft/sec*/,
                                        20*(0.47/18.84) /*inch to get to maxSpeed*/,
                                        theDriveTrain.getHeading() /*Angle to drive straight on*/
                                      )

);
addCommands (new DriveTrainLock(theDriveTrain));

    }



}




